[metadata]
name = webpilot
author = WebPilot Contributors
author_email = webpilot@example.com
description = Professional Web Automation and Testing Framework with ML-Powered Test Generation
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/yourusername/webpilot
project_urls =
    Bug Tracker = https://github.com/yourusername/webpilot/issues
    Documentation = https://webpilot.readthedocs.io
    Source Code = https://github.com/yourusername/webpilot
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Topic :: Software Development :: Testing
    Topic :: Software Development :: Quality Assurance
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Operating System :: OS Independent
    Framework :: Pytest

[options]
python_requires = >=3.9
package_dir =
    = src
packages = find:
include_package_data = True
install_requires =
    selenium>=4.0.0
    aiohttp>=3.8.0
    pyyaml>=6.0
    click>=8.0
    colorama>=0.4.0
    python-dotenv>=0.19.0

[options.packages.find]
where = src

[options.extras_require]
selenium = 
    selenium>=4.0.0
    webdriver-manager>=3.8.0
vision = 
    pytesseract>=0.3.10
    opencv-python>=4.5.0
    Pillow>=9.0.0
ml = 
    scikit-learn>=1.0.0
    numpy>=1.21.0
    pandas>=1.3.0
cloud = 
    requests>=2.26.0
    boto3>=1.20.0
dev =
    pytest>=7.0.0
    pytest-cov>=3.0.0
    pytest-mock>=3.6.0
    pytest-asyncio>=0.18.0
    pytest-timeout>=2.1.0
    black>=22.0.0
    isort>=5.10.0
    flake8>=4.0.0
    mypy>=0.950
    pre-commit>=2.17.0
    sphinx>=4.3.0
    sphinx-rtd-theme>=1.0.0
    bandit>=1.7.0
    safety>=2.0.0
all =
    %(selenium)s
    %(vision)s
    %(ml)s
    %(cloud)s
    %(dev)s

[options.entry_points]
console_scripts =
    webpilot = webpilot.cli:main

[flake8]
max-line-length = 100
max-complexity = 10
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    .eggs,
    *.egg,
    .venv,
    venv,
    .tox,
    .pytest_cache,
    docs,
    scripts
ignore = 
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    E501,  # line too long (handled by black)
    D100,  # Missing docstring in public module
    D104,  # Missing docstring in public package
per-file-ignores =
    __init__.py:F401
    tests/*:D101,D102,D103

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_any_unimported = False
no_implicit_optional = True
check_untyped_defs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
follow_imports = normal
ignore_missing_imports = True
strict_optional = True
strict_equality = True
namespace_packages = True
explicit_package_bases = True

[mypy-tests.*]
ignore_errors = True

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -ra
    --strict-markers
    --cov=webpilot
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    --maxfail=1
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    cloud: marks tests that require cloud providers
    ml: marks tests for machine learning features

[coverage:run]
branch = True
source = src/webpilot
omit = 
    */tests/*
    */test_*.py
    */__init__.py
    */setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @abstractmethod
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
split_on_trailing_comma = True
skip_glob = 
    */migrations/*
    .venv/*
    venv/*

[bandit]
exclude_dirs = 
    tests,
    .venv,
    venv,
    build,
    dist
skips = B101,B601

[pylint]
max-line-length = 100
disable = 
    C0111,  # missing-docstring
    C0103,  # invalid-name
    R0903,  # too-few-public-methods
    R0913,  # too-many-arguments
    W0613,  # unused-argument
    W0622,  # redefined-builtin
    R0801,  # duplicate-code
good-names = i,j,k,e,x,y,_,id,ok